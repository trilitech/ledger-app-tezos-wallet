name: Build & test apps

# This workflow will build the app and then run functional tests using the Ragger framework upon Speculos emulation.
# It calls a reusable workflow developed by Ledger's internal developer team to build the application and upload the
# resulting binaries.
# It then calls another reusable workflow to run the Ragger tests on the compiled application binary.
#
# While this workflow is optional, having functional testing on your application is mandatory and this workflow and
# tooling environment is meant to be easy to use and adapt after forking your application

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  build_app:
    name: Build application
    strategy:
      matrix:
        device: [nanos, nanosp, nanox, stax]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:1d9f741e9bc969b072e2de53762b64993536c0f7
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          DEVICE_SDK="$(echo ${{ matrix.device }} | tr a-z A-Z)_SDK"
          bash -c "make -C app BOLOS_SDK=\$${DEVICE_SDK}"
          tar -C app/bin -czf app_${{ matrix.device }}.tgz .
          bash -c "make -C app BOLOS_SDK=\$${DEVICE_SDK} DEBUG=1"
          tar -C app/bin -czf app_${{ matrix.device }}_dbg.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: app_${{ matrix.device }}.tgz
          name: app_${{ matrix.device }}.tgz
      - name: Upload (dbg)
        uses: actions/upload-artifact@v3
        with:
          path: app_${{ matrix.device }}_dbg.tgz
          name: app_${{ matrix.device }}_dbg.tgz

  build_docker_integration_tests:
    name: Build docker integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Testing docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: europe-west1-docker.pkg.dev/blockchain-speedtest-368211/ledger-build/integration_tests:${{ github.sha }}
          file: docker/Dockerfile.integration-tests

  integration_tests_basic:
    needs: [build_app, build_docker_integration_tests]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        device: [nanos, nanosp, nanox, stax]
    container:
      image: europe-west1-docker.pkg.dev/blockchain-speedtest-368211/ledger-build/integration_tests:${{ github.sha }}
      credentials:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download app
        uses: actions/download-artifact@v3
        with:
          name: app_${{ matrix.device }}.tgz

      - name: Download app (dbg)
        uses: actions/download-artifact@v3
        with:
          name: app_${{ matrix.device }}_dbg.tgz

      - name: Run test
        run: |
          ./tests/integration/run_test_local.sh -F -m ${{ matrix.device }} \
            ./tests/integration/${{ matrix.device }}

      - name: Upload results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration_tests_${{ matrix.device }}.json
          path: ./integration_tests.json
