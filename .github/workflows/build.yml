name: Build apps

# This workflow will build the app and then run functional tests using the Ragger framework upon Speculos emulation.
# It calls a reusable workflow developed by Ledger's internal developer team to build the application and upload the
# resulting binaries.
# It then calls another reusable workflow to run the Ragger tests on the compiled application binary.
#
# While this workflow is optional, having functional testing on your application is mandatory and this workflow and
# tooling environment is meant to be easy to use and adapt after forking your application

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      relative_app_directory: "./app"
      upload_app_binaries_artifact: "compiled_app_binaries"

  build_application_dbg:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      relative_app_directory: "./app"
      upload_app_binaries_artifact: "compiled_app_binaries_dbg"
      flags: "DEBUG=1"

  integration_tests_basic:
    needs: [build_application, build_application_dbg]
    strategy:
      fail-fast: false
      matrix:
        device: [nanos, nanosp, nanox, stax]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download app binaries
        uses: actions/download-artifact@v3
        with:
          name: compiled_app_binaries
          path: ./build

      - name: Download app binaries (dbg)
        uses: actions/download-artifact@v3
        with:
          name: compiled_app_binaries_dbg
          path: ./build_dbg

      - name: Install tests dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-user-static tesseract-ocr libtesseract-dev
          pip install --extra-index-url https://test.pypi.org/simple -r ./tests/requirements.txt

      - name: Run test
        run: ./tests/integration/run_test_local.sh -F -m ${{ matrix.device }} ./tests/integration/${{ matrix.device }}

